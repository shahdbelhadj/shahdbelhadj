name: üöÄ Deploy

on:
  push:
    branches:
      - main
      - dev
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      - run: npm run lint

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      - run: npm run typecheck --if-present

  vitest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      - run: npm run test -- --coverage

  cypress:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: cp .env.example .env
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      - run: npx prisma migrate reset --force
      - run: npm run build
      - uses: cypress-io/github-action@v5
        with:
          start: npm run start:mocks
          wait-on: http://localhost:8811
        env:
          PORT: 8811

  build:
    name: üõ†Ô∏è Build App
    runs-on: ubuntu-latest
    needs: [lint, typecheck, vitest, cypress]  # Ensure these checks pass before building
    steps:
      - uses: actions/checkout@v3
      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      - run: npm run build  # Replace this with your actual build script if different

  deploy:
    name: üöÄ Deploy
    runs-on: ubuntu-latest
    needs: [build]  # Only deploy if the build job passes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v3
      - name: Read app name
        uses: SebRollen/toml-action@v1.0.2
        id: app_name
        with:
          file: fly.toml
          field: app
      - name: Deploy Staging
        if: ${{ github.ref == 'refs/heads/dev' }}
        uses: superfly/flyctl-actions@1.3
        with:
          args: deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app ${{ steps.app_name.outputs.value }}-staging
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      - name: Deploy Production
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: superfly/flyctl-actions@1.3
        with:
          args: deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app ${{ steps.app_name.outputs.value }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
